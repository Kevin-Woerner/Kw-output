//   Copyright (C) 2021 by Kevin D. Woerner
//-/ =KDW= ################# BUILDER $KWROOT/0lib/vkkcp.sh ##################
//-/ =KDW= ########## SOURCE $KWROOT/codekdw/kw-lib/Tm_Const.fwipp ##########
//-/ =KDW= #### THIS FILE CAN BE OVERWRITTEN BY KEVIN D. WOERNER OR HIS #####
//-/ =KDW= ############ MINIONS AT *ANY* TIME. Caveat utilitor. #############
// 2021-05-14 kdw  For Changelog, See File Tm_Const.varylog
#ifndef INCLUDED_Tm_Const_rpn
#define INCLUDED_Tm_Const_rpn
//  IIIIIIIIIINCLUDE ############################################### LANG_C #
#include "Kw.h"
//  CCCCCCCCCC_DEF ################################################# LANG_C #
#define A2DCNT (BIT)
#define P0CNT (BIT)
#define ENGCNT (BIT)
#define DACCNT (BIT)
#define TM_TEST_TIME_SEC (3 * SECOND)
#define TM_DAOV_CAP (0x10000 * DACCNT)
#define TM_DAOV_VREF (2.5 * VOLT)
#define LX_DAOV_RPRE (4.99 * KILO * OHM)
#define LX_DAOV_2R (30.9 * KILO * OHM)
#define LX_DAOV_RGND (6.04 * KILO * OHM)
#define TM_DAOV_GAIN (LX_DAOV_2R * (1.0 / LX_DAOV_RPRE + 1.0 /\
         LX_DAOV_RGND) + 1.0)
#define TM_DAOV_DAC_PER_V (TM_DAOV_CAP / (TM_DAOV_GAIN * TM_DAOV_VREF))
#define TM_DAOV_V_IF_DACMIN (- TM_DAOV_VREF * LX_DAOV_2R / LX_DAOV_RPRE)
#define TM_DAOV_DAC_IF_0V (- TM_DAOV_V_IF_DACMIN * TM_DAOV_DAC_PER_V)
#define TM_DAOV_DAC_MAX (TM_DAOV_CAP - TM_DAOV_DAC_IF_0V)
#define TM_DAOV_DAC_MIN (- TM_DAOV_DAC_IF_0V)
#define TM_DAOV_V_IF_DACMAX (TM_DAOV_DAC_MAX / TM_DAOV_DAC_PER_V)
#define TM_DAOV_DAC_IF_P10V (TM_DAOV_DAC_IF_0V + 10.0 * VOLT *\
         TM_DAOV_DAC_PER_V)
#define TM_DAOV_DAC_IF_M10V (TM_DAOV_DAC_IF_0V - 10.0 * VOLT *\
         TM_DAOV_DAC_PER_V)
#define TM_DAOI_GZ_MAGIC (10.0 * AMP / VOLT)
#define LX_DAOI_1R (45.3 * KILO * OHM)
#define LX_DAOI_2R (191.0 * KILO * OHM)
#define LX_DAOI_3R (18.2 * KILO * OHM)
#define LX_DAOI_4R (100.0 * OHM)
#define TM_DAOI_mA_AT_0V ((LX_DAOI_3R * TM_DAOV_VREF * TM_DAOI_GZ_MAGIC)\
         / LX_DAOI_1R)
#define TM_DAOI_mA_PER_V (LX_DAOI_3R / (LX_DAOI_2R * LX_DAOI_4R * MILLI))
#define TM_DAOI_mA_GAIN ((LX_DAOI_3R * TM_DAOI_mA_PER_V) / LX_DAOI_2R)
#define TM_DAOI_mA_IF_0V ((LX_DAOI_3R * TM_DAOI_mA_PER_V * TM_DAOV_VREF)\
         / LX_DAOI_1R)
#define TM_DAOI_DAC_PER_mA (TM_DAOV_DAC_PER_V / TM_DAOI_mA_PER_V)
#define TM_DAOI_DAC_IF_00mA (TM_DAOV_DAC_IF_0V - TM_DAOI_DAC_PER_mA *\
         TM_DAOI_mA_AT_0V)
#define TM_DAOI_DAC_IF_04mA (TM_DAOI_DAC_IF_00mA + TM_DAOI_DAC_PER_mA *\
         (4.0 * AMP))
#define TM_DAOI_DAC_IF_12mA (TM_DAOI_DAC_IF_00mA + TM_DAOI_DAC_PER_mA *\
         (12.0 * AMP))
#define TM_DAOI_DAC_IF_20mA (TM_DAOI_DAC_IF_00mA + TM_DAOI_DAC_PER_mA *\
         (20.0 * AMP))
#define TM_DAOI_mA_IF_DACMIN (- TM_DAOI_DAC_IF_00mA / TM_DAOI_DAC_PER_mA)
#define TM_DAOI_mA_IF_DACMAX (TM_DAOI_mA_IF_DACMIN + TM_DAOV_CAP /\
         TM_DAOI_DAC_PER_mA)
#define TM_NGT_COUNT_AT_FS (20000.0 * ENGCNT)
#define TM_NGT_P0_PER_COUNT (0x8000 * P0CNT / ENGCNT)
#define TM_NGT_P0_AT_FS (TM_NGT_P0_PER_COUNT * TM_NGT_COUNT_AT_FS)
#define TM_NGT_P0_MAX (TM_NGT_P0_AT_FS * 1.5)
#define TM_NGT_AO_MULT (8192.0)
#define TM_NGT_AO_SHFT (256.0)
#define TM_NGT_A2D_CAP (0x40000 * A2DCNT)
#define TM_NGT_IA_INPUT_MAX 16
#define TM_NGT_CLOCK_Hz (60.0 * MEGA * Hz)
#define TM_NGT_ROTOR_CLOCK_Hz (16.0 * MEGA * Hz)
#define TM_NGT_NOISE_MAX (1.0)
#define TM_NGT_NOISE_MIN (0.3)
#define LX_NGT_3R (10.0 * KILO * OHM)
#define LX_NGT_7R (130.0 * OHM)
#define TM_NGT_GAIN (2.0 * LX_NGT_3R / LX_NGT_7R + 1.0)
#define TM_NGT_A2D_PER_UVPV (TM_NGT_A2D_CAP * TM_NGT_GAIN * UVPV)
#define LX_NGT_ROTOR_BRIDGE (1.0 * KILO * OHM)
#define LX_NGT_SHUNT_OHMS (100.0 * KILO * OHM)
#define TM_NGT_SHUNT_UVPV (0.5 * LX_NGT_ROTOR_BRIDGE / (UVPV * (2.0 *\
         LX_NGT_SHUNT_OHMS + LX_NGT_ROTOR_BRIDGE)))
#define TM_NGT_SHUNT_A2D (TM_NGT_SHUNT_UVPV * TM_NGT_A2D_PER_UVPV)
#define LX_NGT00_ROTOR_BRIDGE (5.0 * KILO * OHM)
#define LX_NGT00_SHUNT_OHMS (270.0 * KILO * OHM)
#define TM_NGT00_SHUNT_UVPV (0.5 * LX_NGT00_ROTOR_BRIDGE / (UVPV * (2.0 *\
         LX_NGT00_SHUNT_OHMS + LX_NGT00_ROTOR_BRIDGE)))
#define TM_NGT00_SHUNT_A2D (TM_NGT00_SHUNT_UVPV * TM_NGT_A2D_PER_UVPV)
#define TM_NGT_MSP430_URV_A2D_FS_COUNT (0x8000)
#define LX_NGT_MSP430_URV_A2D_FS_V (3.3 * VOLT)
#define LX_NGT_MSP430_URV_A2D_0_V (0.0 * VOLT)
#define TM_NGT_MSP430_URV_A2D_PER_V (TM_NGT_MSP430_URV_A2D_FS_COUNT /\
         (LX_NGT_MSP430_URV_A2D_FS_V - LX_NGT_MSP430_URV_A2D_0_V))
#define LX_NGT_URV_ROTOR_R_PLUS (30100.0 * OHM)
#define LX_NGT_URV_ROTOR_R_GND (10000.0 * OHM)
#define LX_NGT_URV_GAIN (LX_NGT_URV_ROTOR_R_GND /\
         (LX_NGT_URV_ROTOR_R_PLUS + LX_NGT_URV_ROTOR_R_GND))
#define TM_NGT_URV_A2D_PER_V (LX_NGT_URV_GAIN * TM_NGT_MSP430_URV_A2D_PER_V)
#define TM_BLT_A2D_CAP (0x20000 * A2DCNT)
#define TM_BLTDC_NOISE_MIN (0.3)
#define TM_BLTDC_NOISE_MAX (0.7)
#define TM_BLT_COUNT_AT_FS (20000 * ENGCNT)
#define TM_BLT_P0_PER_COUNT (0x8000 * P0CNT / ENGCNT)
#define TM_BLT_P0_AT_FS (TM_BLT_COUNT_AT_FS * TM_BLT_P0_PER_COUNT)
#define TM_BLT_DIODE_VOLTAGE_DROP (0.7 * VOLT)
#define LX_BLTDC_ROTOR_24R (100.0 * OHM)
#define LX_BLTDC_ROTOR_25R (499.0 * OHM)
#define LX_BLTDC_ROTOR_26R (200.0 * OHM)
#define LX_BLTDC_ROTOR_27R (2210.0 * OHM)
#define TM_BLTDC_GAIN ((2.0 * LX_BLTDC_ROTOR_25R / LX_BLTDC_ROTOR_24R +\
         1.0) * (2.0 * LX_BLTDC_ROTOR_27R / LX_BLTDC_ROTOR_26R + 1.0))
#define TM_BLTDC_A2D_PER_UVPV ((TM_BLT_A2D_CAP * TM_BLTDC_GAIN) * UVPV)
#define LX_BLTAC_ROTOR_14R (118.0 * OHM)
#define LX_BLTAC_ROTOR_13R (15000.0 * OHM)
#define TM_BLTAC_GAIN (1.0 + 2.0 * LX_BLTAC_ROTOR_13R / LX_BLTAC_ROTOR_14R)
#define TM_BLTAC_A2D_PER_UVPV (TM_BLT_A2D_CAP * TM_BLTAC_GAIN * UVPV)
#define TM_BLTAC_NOISE_MIN (0.1)
#define TM_BLTAC_NOISE_MAX (0.4)
#define TM_BLT_CLOCK_Hz (60.0 * MEGA * Hz)
#define TM_BLT_ROTOR_CLOCK_Hz (20.0 * MEGA * Hz)
#define TM_BLT_SHUNT_OHMS (100.0 * KILO * OHM)
#define TM_BLT_ACDC_RATIO (0.9929)
#define TM_BLT_MF_NO_TARE_SHUNT_BIT (0x01)
#define TM_BLT_MF_NO_LS_BITS_BIT (0x02)
#define TM_BLT_MF_LOP_3_BITS_BIT (0x04)
#define TM_BLT_MF_20KHZ_FILTER_BIT (0x08)
#define TM_BLT_MF_DISABLE_BUTTON_BIT (0x10)
#define TM_BLT_MF_RF_FILTER_BIT (0x20)
#define TM_BLT_MF_OLD_RF_HW_BIT (0x40)
#define TM_BLT_ROTOR_BRIDGE (1000 * OHM)
#define TM_BLTAC_SHUNT_UVPV (TM_BLT_ROTOR_BRIDGE / (UVPV * (4.0 *\
         TM_BLT_SHUNT_OHMS + 2.0 * TM_BLT_ROTOR_BRIDGE)))
#define TM_BLTAC_SHUNT_A2D (TM_BLTAC_SHUNT_UVPV * TM_BLTAC_A2D_PER_UVPV)
#define TM_BLTDC_SHUNT_UVPV (TM_BLT_ROTOR_BRIDGE / (UVPV * (4.0 *\
         TM_BLT_SHUNT_OHMS + 2.0 * TM_BLT_ROTOR_BRIDGE)))
#define TM_BLTDC_SHUNT_A2D (TM_BLTDC_SHUNT_UVPV * TM_BLTDC_A2D_PER_UVPV)
#define TM_CDTM_CLOCK_Hz (60.0 * MEGA * Hz)
#define TM_CDTM_COUNT_AT_FS (15000.0 * ENGCNT)
#define TM_CDTM_P0_PER_COUNT (0x10000 * P0CNT / ENGCNT)
#define TM_CDTM_NOMINAL_Hz_AT_ZERO (8.3 * KILO * Hz)
#define TM_CDTM_NOMINAL_FS_SPAN_Hz (3.5 * KILO * Hz)
#define TM_CDTM_MIN_Hz (2.0 * KILO * Hz)
#define LX_CDTM_2R (10.0 * KILO * OHM)
#define LX_CDTM_5R (10.0 * KILO * OHM)
#define LX_CDTM_8R (100.0 * KILO * OHM)
#define LX_CDTM_7R (499.0 * OHM)
#define LX_CDTM_7C (1.5 * NANO * FARAD)
#define LX_CDTM_8C (1.5 * NANO * FARAD)
#define LX_CDTM_2V (2.5 * VOLT)
#define LX_CDTM_GAINA (LX_CDTM_8R / LX_CDTM_7R)
#define LX_CDTM_GAINB (LX_CDTM_2R / (LX_CDTM_2R + LX_CDTM_5R))
#define LX_CDTM_CT (LX_CDTM_7C + LX_CDTM_8C)
#define LX_CDTM_RZ (1.0 / (1.0 / LX_CDTM_2R + 1.0 / LX_CDTM_5R))
#define LX_CDTM_FOUT_PER_VIN (0.1 / (LX_CDTM_2R * LX_CDTM_CT))
#define LX_CDTM_FOUT_PER_VINZ (0.1 / (LX_CDTM_RZ * LX_CDTM_CT))
#define LX_CDTM_V_OFFSET (LX_CDTM_2V * LX_CDTM_GAINB)
#define TM_CDTM_GAIN (LX_CDTM_GAINA * LX_CDTM_GAINB)
#define TM_CDTM_X (TM_CDTM_GAIN * LX_CDTM_FOUT_PER_VINZ)
#define TM_CDTM_Hz_PER_UVPV (LX_CDTM_2V * TM_CDTM_X * UVPV)
#define TM_CDTM_NOMINAL_Hz_AT_0X (LX_CDTM_V_OFFSET * LX_CDTM_FOUT_PER_VINZ)
#define TM_CDTM_P0_AT_FS (TM_CDTM_COUNT_AT_FS * TM_CDTM_P0_PER_COUNT)
#define TM_CDTM_FS_UVPV (TM_CDTM_NOMINAL_FS_SPAN_Hz / TM_CDTM_Hz_PER_UVPV)
#define TM_CDTM_NOISE_MIN_OLD (0.2)
#define TM_CDTM_NOISE_MAX_OLD (2.0)
#define TM_CDTM_NOISE_MIN (0.2)
#define TM_CDTM_NOISE_MAX (2.0)
#define TM_PDTM_ANAOUT_NUMBER 3
#define TM_PDTM_CHANNEL_NUMBER 4
#define TM_PDTM_FILTER_MAX 10
#define TM_PDTM_NOISE_MIN 7
#define TM_PDTM_NOISE_MAX 25
#define TM_PDTM_A2D_FS 5000
#define TM_PDTM_A2D_CAP (0x2000 * A2DCNT)
#define TM_PDTM_MULT 2
#define TM_PDTM_COUNT_PER_A2D 4
#define TM_PDTM_COUNT_AT_FS (TM_PDTM_A2D_FS * TM_PDTM_COUNT_PER_A2D)
#define TM_PDTM_TC_PER_DEGC (16 / DEGC)
#define TM_PDTM_GAIN_VALUES (0x1000)
#define TM_PDTM_CLOCK_Hz (8.0 * MEGA * Hz)
#define TM_PDTM_SEC_PER_ZRVALUE (0x8000 / TM_PDTM_CLOCK_Hz)
#define LX_PDTM_22R (6.65 * KILO * OHM)
#define LX_PDTM_23R (30.1 * KILO * OHM)
#define LX_PDTM_18R (49.9 * KILO * OHM)
#define LX_PDTM_19R (10.0 * KILO * OHM)
#define LX_PDTM_10R (49.9 * KILO * OHM)
#define LX_PDTM_11R (30.1 * KILO * OHM)
#define LX_PDTM_GAIN_HWA (LX_PDTM_23R / LX_PDTM_22R)
#define LX_PDTM_GAIN_HWB (LX_PDTM_18R / LX_PDTM_19R + 1.0)
#define LX_PDTM_GAIN_HWC (2.0 * TWOSQRT / PI)
#define LX_PDTM_GAIN_HWD (LX_PDTM_10R / LX_PDTM_11R + 1.0)
#define TM_PDTM_GAIN_HW (LX_PDTM_GAIN_HWA * LX_PDTM_GAIN_HWB *\
         LX_PDTM_GAIN_HWC * LX_PDTM_GAIN_HWD)
#define TM_PDTM_GAIN_PER_GAIN (TM_PDTM_GAIN_HW / TM_PDTM_GAIN_VALUES)
#define TM_PDTM_COUNT_PER_GAIN_UVPV (UVPV * TM_PDTM_A2D_CAP *\
         TM_PDTM_COUNT_PER_A2D * TM_PDTM_GAIN_PER_GAIN)
#define TM_PDTM_P0_AT_FS (TM_PDTM_A2D_CAP * TM_PDTM_COUNT_PER_A2D *\
         TM_PDTM_COUNT_AT_FS)
#define TM_PDTM_GAIN_MVPVATFS (35340.0)
#define TM_S700_NUMBER_CHANNELS 3
#define TM_S700_FILTER_MAX 10
#define TM_S700_COUNT_AT_FS (10000.0 * ENGCNT)
#define TM_S700_P0_PER_COUNT (0x10000 * P0CNT / ENGCNT)
#define TM_S700_P0_AT_FS (TM_S700_P0_PER_COUNT * TM_S700_COUNT_AT_FS)
#define TM_S700P_FILTER_MAX 10
#define TM_S700P_A2D_CAP (0x800000 * A2DCNT)
#define TM_S700P_A2D_AT_FS (4.0 * MEGA * A2DCNT)
#define TM_S700P_COUNT_AT_FS (655360000.0 * ENGCNT)
#define TM_S700P_P0_PER_COUNT (1.0 * P0CNT / ENGCNT)
#define TM_S700P_P0_AT_FS (TM_S700P_P0_PER_COUNT * TM_S700P_COUNT_AT_FS)
#define TM_NGRTM_CLOCK_Hz (16.0 * MEGA * Hz)
#define TM_NGRTM_A2D_CAP (0x800000 * A2DCNT)
#define TM_NGRTM_P0_AT_FS (163840000.0 * P0CNT)
#define TM_NGRTM_CAMELD (0x4000)
#define TM_NGRTM_CAMELA (1.0 * 0x4000 * 0x100000 * P0CNT / DACCNT)
#define TM_NGRTM_DACFS_PER_CDE (TM_NGRTM_P0_AT_FS / TM_NGRTM_CAMELA)
#define TM_NGRTM_FSV_PER_CDE (TM_NGRTM_DACFS_PER_CDE / TM_DAOV_DAC_PER_V)
#define TM_NGRTM_SCALE (TM_NGRTM_DACFS_PER_CDE * TM_NGRTM_CAMELD)
#define TM_NGRTM_A2DFS_AT_1GAIN (TM_NGRTM_P0_AT_FS * 0x10000)
#define LX_NGRTM_30R (10.0 * KILO * OHM)
#define LX_NGRTM_28R (130.0 * OHM)
#define TM_NGRTM_GAIN (2.0 * LX_NGRTM_30R / LX_NGRTM_28R + 1.0)
#define TM_NGRTM_A2D_PER_UVPV (TM_NGRTM_A2D_CAP * TM_NGRTM_GAIN * UVPV)
#define TM_NGRTM_NOISE_MIN (0.5)
#define TM_NGRTM_NOISE_MAX (1.0)
#define TM_AD22103_VREF (3.3 * VOLT)
#define TM_AD22103_V_PER_DEGC (0.028 * VOLT / DEGC)
#define TM_AD22103_V_AT_0DEGC (0.25 * VOLT)
#define TM_NGRTM_TEMPA2D_CAP (0x8000 * A2DCNT)
#define TM_NGRTM_TEMPP0_PER_A2D (0x10000 * P0CNT / A2DCNT)
#define TM_NGRTM_DEGC_OFFSET (TM_AD22103_V_AT_0DEGC / TM_AD22103_V_PER_DEGC)
#define TM_NGRTM_TEMPP0_PER_DEGC (TM_NGRTM_TEMPA2D_CAP *\
         TM_AD22103_V_PER_DEGC * TM_NGRTM_TEMPP0_PER_A2D / TM_AD22103_VREF)
#define TM_NGRTM_TEMPP0_PER_DEGF (DEGF * TM_NGRTM_TEMPP0_PER_DEGC / DEGC)
#define TM_NGRTM_TEMPP0_UVPV_PER_DEGF (TM_NGRTM_TEMPP0_PER_DEGF /\
         (TM_NGRTM_A2D_PER_UVPV * TM_NGRTM_TEMPP0_PER_A2D * 0x1000))
#define TM_BLTDC_FILTER_Hz (20.0 * KILO * Hz)
#define TM_BLTAC_FILTER_Hz (20.0 * KILO * Hz)
#define TM_CDTM_FILTER_Hz (10.0 * KILO * Hz)
#define TM_NGT_FILTER_Hz (7.8125 * KILO * Hz)
#define TM_NGRTM_FILTER_Hz (7.8125 * KILO * Hz)
#define TM_S700P_FILTER_Hz (7.8125 * KILO * Hz)
#define TM_PDTM_FILTER_Hz (2.0 * KILO * Hz)
#define TM_S700_FILTER_Hz (2.0 * KILO * Hz)
#define TM_BLTDC_UVPV_PER_A2D (1.0 / TM_BLTDC_A2D_PER_UVPV)
#define TM_BLTAC_UVPV_PER_A2D (1.0 / TM_BLTAC_A2D_PER_UVPV)
#define TM_CDTM_UVPV_PER_Hz (1.0 / TM_CDTM_Hz_PER_UVPV)
#define TM_NGRTM_UVPV_PER_A2D (1.0 / TM_NGRTM_A2D_PER_UVPV)
#define TM_NGT_UVPV_PER_A2D (1.0 / TM_NGT_A2D_PER_UVPV)
#define TM_PDTM_GAIN_UVPV_PER_COUNT (1.0 / TM_PDTM_COUNT_PER_GAIN_UVPV)
#define TM_BLTDC_UVPV_IF_A2DMAX (1.0 / (UVPV * TM_BLTDC_GAIN))
#define TM_BLTAC_UVPV_IF_A2DMAX (1.0 / (UVPV * TM_BLTAC_GAIN))
#define TM_NGT_UVPV_IF_A2DMAX (1.0 / (UVPV * TM_NGT_GAIN))
#define TM_NGRTM_UVPV_IF_A2DMAX (1.0 / (UVPV * TM_NGRTM_GAIN))
//  FFFFFFFFFFUNC_PROTOTYPE ######################################## LANG_C #
{RPN_D_, "cxTM_NGT_MSP430_URV_A2D_FS_COUNT",\
         {cxTM_NGT_MSP430_URV_A2D_FS_COUNT}},
{RPN_D_, "cxTM_NGRTM_TEMPP0_UVPV_PER_DEGF",\
         {cxTM_NGRTM_TEMPP0_UVPV_PER_DEGF}},
{RPN_C_, "TM_NGT_MSP430_URV_A2D_FS_COUNT", {.dbl =\
         TM_NGT_MSP430_URV_A2D_FS_COUNT}},
{RPN_D_, "cxTM_BLT_MF_DISABLE_BUTTON_BIT", {cxTM_BLT_MF_DISABLE_BUTTON_BIT}},
{RPN_C_, "TM_NGRTM_TEMPP0_UVPV_PER_DEGF", {.dbl =\
         TM_NGRTM_TEMPP0_UVPV_PER_DEGF}},
{RPN_D_, "cxTM_BLT_MF_NO_TARE_SHUNT_BIT", {cxTM_BLT_MF_NO_TARE_SHUNT_BIT}},
{RPN_D_, "cxTM_NGT_MSP430_URV_A2D_PER_V", {cxTM_NGT_MSP430_URV_A2D_PER_V}},
{RPN_D_, "cxTM_PDTM_COUNT_PER_GAIN_UVPV", {cxTM_PDTM_COUNT_PER_GAIN_UVPV}},
{RPN_D_, "cxTM_PDTM_GAIN_UVPV_PER_COUNT", {cxTM_PDTM_GAIN_UVPV_PER_COUNT}},
{RPN_C_, "TM_BLT_MF_DISABLE_BUTTON_BIT", {.dbl =\
         TM_BLT_MF_DISABLE_BUTTON_BIT}},
{RPN_D_, "cxLX_NGT_MSP430_URV_A2D_FS_V", {cxLX_NGT_MSP430_URV_A2D_FS_V}},
{RPN_D_, "cxTM_BLT_MF_20KHZ_FILTER_BIT", {cxTM_BLT_MF_20KHZ_FILTER_BIT}},
{RPN_D_, "cxTM_CDTM_NOMINAL_FS_SPAN_Hz", {cxTM_CDTM_NOMINAL_FS_SPAN_Hz}},
{RPN_D_, "cxTM_CDTM_NOMINAL_Hz_AT_ZERO", {cxTM_CDTM_NOMINAL_Hz_AT_ZERO}},
{RPN_C_, "TM_BLT_MF_NO_TARE_SHUNT_BIT", {.dbl =\
         TM_BLT_MF_NO_TARE_SHUNT_BIT}},
{RPN_C_, "TM_NGT_MSP430_URV_A2D_PER_V", {.dbl =\
         TM_NGT_MSP430_URV_A2D_PER_V}},
{RPN_C_, "TM_PDTM_COUNT_PER_GAIN_UVPV", {.dbl =\
         TM_PDTM_COUNT_PER_GAIN_UVPV}},
{RPN_C_, "TM_PDTM_GAIN_UVPV_PER_COUNT", {.dbl =\
         TM_PDTM_GAIN_UVPV_PER_COUNT}},
{RPN_D_, "cxLX_NGT_MSP430_URV_A2D_0_V", {cxLX_NGT_MSP430_URV_A2D_0_V}},
{RPN_D_, "cxTM_BLT_DIODE_VOLTAGE_DROP", {cxTM_BLT_DIODE_VOLTAGE_DROP}},
{RPN_D_D, "tmc_cdtm_rotor_freq_to_uVpV", {tmc_cdtm_rotor_freq_to_uVpV}},
{RPN_D_D, "tmc_cdtm_uVpV_to_rotor_freq", {tmc_cdtm_uVpV_to_rotor_freq}},
{RPN_C_, "LX_NGT_MSP430_URV_A2D_FS_V", {.dbl = LX_NGT_MSP430_URV_A2D_FS_V}},
{RPN_C_, "TM_BLT_MF_20KHZ_FILTER_BIT", {.dbl = TM_BLT_MF_20KHZ_FILTER_BIT}},
{RPN_C_, "TM_CDTM_NOMINAL_FS_SPAN_Hz", {.dbl = TM_CDTM_NOMINAL_FS_SPAN_Hz}},
{RPN_C_, "TM_CDTM_NOMINAL_Hz_AT_ZERO", {.dbl = TM_CDTM_NOMINAL_Hz_AT_ZERO}},
{RPN_D_, "cxTM_BLT_MF_LOP_3_BITS_BIT", {cxTM_BLT_MF_LOP_3_BITS_BIT}},
{RPN_D_, "cxTM_BLT_MF_NO_LS_BITS_BIT", {cxTM_BLT_MF_NO_LS_BITS_BIT}},
{RPN_D_, "cxTM_CDTM_NOMINAL_Hz_AT_0X", {cxTM_CDTM_NOMINAL_Hz_AT_0X}},
{RPN_D_, "cxTM_NGRTM_TEMPP0_PER_DEGC", {cxTM_NGRTM_TEMPP0_PER_DEGC}},
{RPN_D_, "cxTM_NGRTM_TEMPP0_PER_DEGF", {cxTM_NGRTM_TEMPP0_PER_DEGF}},
{RPN_C_, "LX_NGT_MSP430_URV_A2D_0_V", {.dbl = LX_NGT_MSP430_URV_A2D_0_V}},
{RPN_C_, "TM_BLT_DIODE_VOLTAGE_DROP", {.dbl = TM_BLT_DIODE_VOLTAGE_DROP}},
{RPN_D_, "cxLX_NGT_URV_ROTOR_R_PLUS", {cxLX_NGT_URV_ROTOR_R_PLUS}},
{RPN_D_, "cxTM_BLTAC_UVPV_IF_A2DMAX", {cxTM_BLTAC_UVPV_IF_A2DMAX}},
{RPN_D_, "cxTM_BLTDC_UVPV_IF_A2DMAX", {cxTM_BLTDC_UVPV_IF_A2DMAX}},
{RPN_D_, "cxTM_BLT_MF_OLD_RF_HW_BIT", {cxTM_BLT_MF_OLD_RF_HW_BIT}},
{RPN_D_, "cxTM_BLT_MF_RF_FILTER_BIT", {cxTM_BLT_MF_RF_FILTER_BIT}},
{RPN_D_, "cxTM_NGRTM_A2DFS_AT_1GAIN", {cxTM_NGRTM_A2DFS_AT_1GAIN}},
{RPN_D_, "cxTM_NGRTM_TEMPP0_PER_A2D", {cxTM_NGRTM_TEMPP0_PER_A2D}},
{RPN_D_, "cxTM_NGRTM_UVPV_IF_A2DMAX", {cxTM_NGRTM_UVPV_IF_A2DMAX}},
{RPN_D_, "cxTM_PDTM_SEC_PER_ZRVALUE", {cxTM_PDTM_SEC_PER_ZRVALUE}},
{RPN_D_, "cxTM_S700_NUMBER_CHANNELS", {cxTM_S700_NUMBER_CHANNELS}},
{RPN_C_, "TM_BLT_MF_LOP_3_BITS_BIT", {.dbl = TM_BLT_MF_LOP_3_BITS_BIT}},
{RPN_C_, "TM_BLT_MF_NO_LS_BITS_BIT", {.dbl = TM_BLT_MF_NO_LS_BITS_BIT}},
{RPN_C_, "TM_CDTM_NOMINAL_Hz_AT_0X", {.dbl = TM_CDTM_NOMINAL_Hz_AT_0X}},
{RPN_C_, "TM_NGRTM_TEMPP0_PER_DEGC", {.dbl = TM_NGRTM_TEMPP0_PER_DEGC}},
{RPN_C_, "TM_NGRTM_TEMPP0_PER_DEGF", {.dbl = TM_NGRTM_TEMPP0_PER_DEGF}},
{RPN_D_, "cxLX_NGT_URV_ROTOR_R_GND", {cxLX_NGT_URV_ROTOR_R_GND}},
{RPN_D_, "cxTM_NGRTM_DACFS_PER_CDE", {cxTM_NGRTM_DACFS_PER_CDE}},
{RPN_D_, "cxTM_PDTM_CHANNEL_NUMBER", {cxTM_PDTM_CHANNEL_NUMBER}},
{RPN_C_, "LX_NGT_URV_ROTOR_R_PLUS", {.dbl = LX_NGT_URV_ROTOR_R_PLUS}},
{RPN_C_, "TM_BLTAC_UVPV_IF_A2DMAX", {.dbl = TM_BLTAC_UVPV_IF_A2DMAX}},
{RPN_C_, "TM_BLTDC_UVPV_IF_A2DMAX", {.dbl = TM_BLTDC_UVPV_IF_A2DMAX}},
{RPN_C_, "TM_BLT_MF_OLD_RF_HW_BIT", {.dbl = TM_BLT_MF_OLD_RF_HW_BIT}},
{RPN_C_, "TM_BLT_MF_RF_FILTER_BIT", {.dbl = TM_BLT_MF_RF_FILTER_BIT}},
{RPN_C_, "TM_NGRTM_A2DFS_AT_1GAIN", {.dbl = TM_NGRTM_A2DFS_AT_1GAIN}},
{RPN_C_, "TM_NGRTM_TEMPP0_PER_A2D", {.dbl = TM_NGRTM_TEMPP0_PER_A2D}},
{RPN_C_, "TM_NGRTM_UVPV_IF_A2DMAX", {.dbl = TM_NGRTM_UVPV_IF_A2DMAX}},
{RPN_C_, "TM_PDTM_SEC_PER_ZRVALUE", {.dbl = TM_PDTM_SEC_PER_ZRVALUE}},
{RPN_C_, "TM_S700_NUMBER_CHANNELS", {.dbl = TM_S700_NUMBER_CHANNELS}},
{RPN_D_, "cxLX_CDTM_FOUT_PER_VINZ", {cxLX_CDTM_FOUT_PER_VINZ}},
{RPN_D_, "cxLX_NGT00_ROTOR_BRIDGE", {cxLX_NGT00_ROTOR_BRIDGE}},
{RPN_D_, "cxTM_AD22103_V_AT_0DEGC", {cxTM_AD22103_V_AT_0DEGC}},
{RPN_D_, "cxTM_AD22103_V_PER_DEGC", {cxTM_AD22103_V_PER_DEGC}},
{RPN_D_, "cxTM_BLTAC_A2D_PER_UVPV", {cxTM_BLTAC_A2D_PER_UVPV}},
{RPN_D_, "cxTM_BLTAC_UVPV_PER_A2D", {cxTM_BLTAC_UVPV_PER_A2D}},
{RPN_D_, "cxTM_BLTDC_A2D_PER_UVPV", {cxTM_BLTDC_A2D_PER_UVPV}},
{RPN_D_, "cxTM_BLTDC_UVPV_PER_A2D", {cxTM_BLTDC_UVPV_PER_A2D}},
{RPN_D_, "cxTM_BLT_ROTOR_CLOCK_Hz", {cxTM_BLT_ROTOR_CLOCK_Hz}},
{RPN_D_, "cxTM_CDTM_NOISE_MAX_OLD", {cxTM_CDTM_NOISE_MAX_OLD}},
{RPN_D_, "cxTM_CDTM_NOISE_MIN_OLD", {cxTM_CDTM_NOISE_MIN_OLD}},
{RPN_D_, "cxTM_NGRTM_A2D_PER_UVPV", {cxTM_NGRTM_A2D_PER_UVPV}},
{RPN_D_, "cxTM_NGRTM_UVPV_PER_A2D", {cxTM_NGRTM_UVPV_PER_A2D}},
{RPN_D_, "cxTM_NGT_ROTOR_CLOCK_Hz", {cxTM_NGT_ROTOR_CLOCK_Hz}},
{RPN_D_, "cxTM_NGT_UVPV_IF_A2DMAX", {cxTM_NGT_UVPV_IF_A2DMAX}},
{RPN_D_, "cxTM_PDTM_ANAOUT_NUMBER", {cxTM_PDTM_ANAOUT_NUMBER}},
{RPN_D_, "cxTM_PDTM_COUNT_PER_A2D", {cxTM_PDTM_COUNT_PER_A2D}},
{RPN_D_, "cxTM_PDTM_GAIN_MVPVATFS", {cxTM_PDTM_GAIN_MVPVATFS}},
{RPN_D_, "cxTM_PDTM_GAIN_PER_GAIN", {cxTM_PDTM_GAIN_PER_GAIN}},
{RPN_D_, "cxTM_S700P_P0_PER_COUNT", {cxTM_S700P_P0_PER_COUNT}},
{RPN_C_, "LX_NGT_URV_ROTOR_R_GND", {.dbl = LX_NGT_URV_ROTOR_R_GND}},
{RPN_C_, "TM_NGRTM_DACFS_PER_CDE", {.dbl = TM_NGRTM_DACFS_PER_CDE}},
{RPN_C_, "TM_PDTM_CHANNEL_NUMBER", {.dbl = TM_PDTM_CHANNEL_NUMBER}},
{RPN_D_, "cxLX_CDTM_FOUT_PER_VIN", {cxLX_CDTM_FOUT_PER_VIN}},
{RPN_D_, "cxTM_CDTM_P0_PER_COUNT", {cxTM_CDTM_P0_PER_COUNT}},
{RPN_D_, "cxTM_DAOI_mA_IF_DACMAX", {cxTM_DAOI_mA_IF_DACMAX}},
{RPN_D_, "cxTM_DAOI_mA_IF_DACMIN", {cxTM_DAOI_mA_IF_DACMIN}},
{RPN_D_, "cxTM_NGRTM_DEGC_OFFSET", {cxTM_NGRTM_DEGC_OFFSET}},
{RPN_D_, "cxTM_NGRTM_FSV_PER_CDE", {cxTM_NGRTM_FSV_PER_CDE}},
{RPN_D_, "cxTM_NGRTM_TEMPA2D_CAP", {cxTM_NGRTM_TEMPA2D_CAP}},
{RPN_D_, "cxTM_NGT_URV_A2D_PER_V", {cxTM_NGT_URV_A2D_PER_V}},
{RPN_D_, "cxTM_S700P_COUNT_AT_FS", {cxTM_S700P_COUNT_AT_FS}},
{RPN_D_, "cxTM_S700_P0_PER_COUNT", {cxTM_S700_P0_PER_COUNT}},
{RPN_C_, "LX_CDTM_FOUT_PER_VINZ", {.dbl = LX_CDTM_FOUT_PER_VINZ}},
{RPN_C_, "LX_NGT00_ROTOR_BRIDGE", {.dbl = LX_NGT00_ROTOR_BRIDGE}},
{RPN_C_, "TM_AD22103_V_AT_0DEGC", {.dbl = TM_AD22103_V_AT_0DEGC}},
{RPN_C_, "TM_AD22103_V_PER_DEGC", {.dbl = TM_AD22103_V_PER_DEGC}},
{RPN_C_, "TM_BLTAC_A2D_PER_UVPV", {.dbl = TM_BLTAC_A2D_PER_UVPV}},
{RPN_C_, "TM_BLTAC_UVPV_PER_A2D", {.dbl = TM_BLTAC_UVPV_PER_A2D}},
{RPN_C_, "TM_BLTDC_A2D_PER_UVPV", {.dbl = TM_BLTDC_A2D_PER_UVPV}},
{RPN_C_, "TM_BLTDC_UVPV_PER_A2D", {.dbl = TM_BLTDC_UVPV_PER_A2D}},
{RPN_C_, "TM_BLT_ROTOR_CLOCK_Hz", {.dbl = TM_BLT_ROTOR_CLOCK_Hz}},
{RPN_C_, "TM_CDTM_NOISE_MAX_OLD", {.dbl = TM_CDTM_NOISE_MAX_OLD}},
{RPN_C_, "TM_CDTM_NOISE_MIN_OLD", {.dbl = TM_CDTM_NOISE_MIN_OLD}},
{RPN_C_, "TM_NGRTM_A2D_PER_UVPV", {.dbl = TM_NGRTM_A2D_PER_UVPV}},
{RPN_C_, "TM_NGRTM_UVPV_PER_A2D", {.dbl = TM_NGRTM_UVPV_PER_A2D}},
{RPN_C_, "TM_NGT_ROTOR_CLOCK_Hz", {.dbl = TM_NGT_ROTOR_CLOCK_Hz}},
{RPN_C_, "TM_NGT_UVPV_IF_A2DMAX", {.dbl = TM_NGT_UVPV_IF_A2DMAX}},
{RPN_C_, "TM_PDTM_ANAOUT_NUMBER", {.dbl = TM_PDTM_ANAOUT_NUMBER}},
{RPN_C_, "TM_PDTM_COUNT_PER_A2D", {.dbl = TM_PDTM_COUNT_PER_A2D}},
{RPN_C_, "TM_PDTM_GAIN_MVPVATFS", {.dbl = TM_PDTM_GAIN_MVPVATFS}},
{RPN_C_, "TM_PDTM_GAIN_PER_GAIN", {.dbl = TM_PDTM_GAIN_PER_GAIN}},
{RPN_C_, "TM_S700P_P0_PER_COUNT", {.dbl = TM_S700P_P0_PER_COUNT}},
{RPN_D_, "cxLX_NGT00_SHUNT_OHMS", {cxLX_NGT00_SHUNT_OHMS}},
{RPN_D_, "cxLX_NGT_ROTOR_BRIDGE", {cxLX_NGT_ROTOR_BRIDGE}},
{RPN_D_, "cxTM_BLTAC_SHUNT_UVPV", {cxTM_BLTAC_SHUNT_UVPV}},
{RPN_D_, "cxTM_BLTDC_SHUNT_UVPV", {cxTM_BLTDC_SHUNT_UVPV}},
{RPN_D_, "cxTM_BLT_P0_PER_COUNT", {cxTM_BLT_P0_PER_COUNT}},
{RPN_D_, "cxTM_BLT_ROTOR_BRIDGE", {cxTM_BLT_ROTOR_BRIDGE}},
{RPN_D_, "cxTM_CDTM_COUNT_AT_FS", {cxTM_CDTM_COUNT_AT_FS}},
{RPN_D_, "cxTM_CDTM_Hz_PER_UVPV", {cxTM_CDTM_Hz_PER_UVPV}},
{RPN_D_, "cxTM_CDTM_UVPV_PER_Hz", {cxTM_CDTM_UVPV_PER_Hz}},
{RPN_D_, "cxTM_DAOI_DAC_IF_00mA", {cxTM_DAOI_DAC_IF_00mA}},
{RPN_D_, "cxTM_DAOI_DAC_IF_04mA", {cxTM_DAOI_DAC_IF_04mA}},
{RPN_D_, "cxTM_DAOI_DAC_IF_12mA", {cxTM_DAOI_DAC_IF_12mA}},
{RPN_D_, "cxTM_DAOI_DAC_IF_20mA", {cxTM_DAOI_DAC_IF_20mA}},
{RPN_D_, "cxTM_DAOV_DAC_IF_M10V", {cxTM_DAOV_DAC_IF_M10V}},
{RPN_D_, "cxTM_DAOV_DAC_IF_P10V", {cxTM_DAOV_DAC_IF_P10V}},
{RPN_D_, "cxTM_DAOV_V_IF_DACMAX", {cxTM_DAOV_V_IF_DACMAX}},
{RPN_D_, "cxTM_DAOV_V_IF_DACMIN", {cxTM_DAOV_V_IF_DACMIN}},
{RPN_D_, "cxTM_NGT00_SHUNT_UVPV", {cxTM_NGT00_SHUNT_UVPV}},
{RPN_D_, "cxTM_NGT_A2D_PER_UVPV", {cxTM_NGT_A2D_PER_UVPV}},
{RPN_D_, "cxTM_NGT_IA_INPUT_MAX", {cxTM_NGT_IA_INPUT_MAX}},
{RPN_D_, "cxTM_NGT_P0_PER_COUNT", {cxTM_NGT_P0_PER_COUNT}},
{RPN_D_, "cxTM_NGT_UVPV_PER_A2D", {cxTM_NGT_UVPV_PER_A2D}},
{RPN_D_, "cxTM_PDTM_COUNT_AT_FS", {cxTM_PDTM_COUNT_AT_FS}},
{RPN_D_, "cxTM_PDTM_GAIN_VALUES", {cxTM_PDTM_GAIN_VALUES}},
{RPN_D_, "cxTM_PDTM_TC_PER_DEGC", {cxTM_PDTM_TC_PER_DEGC}},
{RPN_D_, "cxTM_S700P_FILTER_MAX", {cxTM_S700P_FILTER_MAX}},
{RPN_D_, "cxTM_S700_COUNT_AT_FS", {cxTM_S700_COUNT_AT_FS}},
{RPN_D_D, "tmc_dao_deltaV_to_DAC", {tmc_dao_deltaV_to_DAC}},
{RPN_C_, "LX_CDTM_FOUT_PER_VIN", {.dbl = LX_CDTM_FOUT_PER_VIN}},
{RPN_C_, "TM_CDTM_P0_PER_COUNT", {.dbl = TM_CDTM_P0_PER_COUNT}},
{RPN_C_, "TM_DAOI_mA_IF_DACMAX", {.dbl = TM_DAOI_mA_IF_DACMAX}},
{RPN_C_, "TM_DAOI_mA_IF_DACMIN", {.dbl = TM_DAOI_mA_IF_DACMIN}},
{RPN_C_, "TM_NGRTM_DEGC_OFFSET", {.dbl = TM_NGRTM_DEGC_OFFSET}},
{RPN_C_, "TM_NGRTM_FSV_PER_CDE", {.dbl = TM_NGRTM_FSV_PER_CDE}},
{RPN_C_, "TM_NGRTM_TEMPA2D_CAP", {.dbl = TM_NGRTM_TEMPA2D_CAP}},
{RPN_C_, "TM_NGT_URV_A2D_PER_V", {.dbl = TM_NGT_URV_A2D_PER_V}},
{RPN_C_, "TM_S700P_COUNT_AT_FS", {.dbl = TM_S700P_COUNT_AT_FS}},
{RPN_C_, "TM_S700_P0_PER_COUNT", {.dbl = TM_S700_P0_PER_COUNT}},
{RPN_D_, "cxLX_BLTAC_ROTOR_13R", {cxLX_BLTAC_ROTOR_13R}},
{RPN_D_, "cxLX_BLTAC_ROTOR_14R", {cxLX_BLTAC_ROTOR_14R}},
{RPN_D_, "cxLX_BLTDC_ROTOR_24R", {cxLX_BLTDC_ROTOR_24R}},
{RPN_D_, "cxLX_BLTDC_ROTOR_25R", {cxLX_BLTDC_ROTOR_25R}},
{RPN_D_, "cxLX_BLTDC_ROTOR_26R", {cxLX_BLTDC_ROTOR_26R}},
{RPN_D_, "cxLX_BLTDC_ROTOR_27R", {cxLX_BLTDC_ROTOR_27R}},
{RPN_D_, "cxTM_BLTAC_FILTER_Hz", {cxTM_BLTAC_FILTER_Hz}},
{RPN_D_, "cxTM_BLTAC_NOISE_MAX", {cxTM_BLTAC_NOISE_MAX}},
{RPN_D_, "cxTM_BLTAC_NOISE_MIN", {cxTM_BLTAC_NOISE_MIN}},
{RPN_D_, "cxTM_BLTAC_SHUNT_A2D", {cxTM_BLTAC_SHUNT_A2D}},
{RPN_D_, "cxTM_BLTDC_FILTER_Hz", {cxTM_BLTDC_FILTER_Hz}},
{RPN_D_, "cxTM_BLTDC_NOISE_MAX", {cxTM_BLTDC_NOISE_MAX}},
{RPN_D_, "cxTM_BLTDC_NOISE_MIN", {cxTM_BLTDC_NOISE_MIN}},
{RPN_D_, "cxTM_BLTDC_SHUNT_A2D", {cxTM_BLTDC_SHUNT_A2D}},
{RPN_D_, "cxTM_BLT_COUNT_AT_FS", {cxTM_BLT_COUNT_AT_FS}},
{RPN_D_, "cxTM_DAOI_DAC_PER_mA", {cxTM_DAOI_DAC_PER_mA}},
{RPN_D_, "cxTM_NGRTM_FILTER_Hz", {cxTM_NGRTM_FILTER_Hz}},
{RPN_D_, "cxTM_NGRTM_NOISE_MAX", {cxTM_NGRTM_NOISE_MAX}},
{RPN_D_, "cxTM_NGRTM_NOISE_MIN", {cxTM_NGRTM_NOISE_MIN}},
{RPN_D_, "cxTM_NGT00_SHUNT_A2D", {cxTM_NGT00_SHUNT_A2D}},
{RPN_D_, "cxTM_NGT_COUNT_AT_FS", {cxTM_NGT_COUNT_AT_FS}},
{RPN_D_, "cxTM_PDTM_FILTER_MAX", {cxTM_PDTM_FILTER_MAX}},
{RPN_D_, "cxTM_S700P_A2D_AT_FS", {cxTM_S700P_A2D_AT_FS}},
{RPN_D_, "cxTM_S700P_FILTER_Hz", {cxTM_S700P_FILTER_Hz}},
{RPN_D_, "cxTM_S700_FILTER_MAX", {cxTM_S700_FILTER_MAX}},
{RPN_C_, "LX_NGT00_SHUNT_OHMS", {.dbl = LX_NGT00_SHUNT_OHMS}},
{RPN_C_, "LX_NGT_ROTOR_BRIDGE", {.dbl = LX_NGT_ROTOR_BRIDGE}},
{RPN_C_, "TM_BLTAC_SHUNT_UVPV", {.dbl = TM_BLTAC_SHUNT_UVPV}},
{RPN_C_, "TM_BLTDC_SHUNT_UVPV", {.dbl = TM_BLTDC_SHUNT_UVPV}},
{RPN_C_, "TM_BLT_P0_PER_COUNT", {.dbl = TM_BLT_P0_PER_COUNT}},
{RPN_C_, "TM_BLT_ROTOR_BRIDGE", {.dbl = TM_BLT_ROTOR_BRIDGE}},
{RPN_C_, "TM_CDTM_COUNT_AT_FS", {.dbl = TM_CDTM_COUNT_AT_FS}},
{RPN_C_, "TM_CDTM_Hz_PER_UVPV", {.dbl = TM_CDTM_Hz_PER_UVPV}},
{RPN_C_, "TM_CDTM_UVPV_PER_Hz", {.dbl = TM_CDTM_UVPV_PER_Hz}},
{RPN_C_, "TM_DAOI_DAC_IF_00mA", {.dbl = TM_DAOI_DAC_IF_00mA}},
{RPN_C_, "TM_DAOI_DAC_IF_04mA", {.dbl = TM_DAOI_DAC_IF_04mA}},
{RPN_C_, "TM_DAOI_DAC_IF_12mA", {.dbl = TM_DAOI_DAC_IF_12mA}},
{RPN_C_, "TM_DAOI_DAC_IF_20mA", {.dbl = TM_DAOI_DAC_IF_20mA}},
{RPN_C_, "TM_DAOV_DAC_IF_M10V", {.dbl = TM_DAOV_DAC_IF_M10V}},
{RPN_C_, "TM_DAOV_DAC_IF_P10V", {.dbl = TM_DAOV_DAC_IF_P10V}},
{RPN_C_, "TM_DAOV_V_IF_DACMAX", {.dbl = TM_DAOV_V_IF_DACMAX}},
{RPN_C_, "TM_DAOV_V_IF_DACMIN", {.dbl = TM_DAOV_V_IF_DACMIN}},
{RPN_C_, "TM_NGT00_SHUNT_UVPV", {.dbl = TM_NGT00_SHUNT_UVPV}},
{RPN_C_, "TM_NGT_A2D_PER_UVPV", {.dbl = TM_NGT_A2D_PER_UVPV}},
{RPN_C_, "TM_NGT_IA_INPUT_MAX", {.dbl = TM_NGT_IA_INPUT_MAX}},
{RPN_C_, "TM_NGT_P0_PER_COUNT", {.dbl = TM_NGT_P0_PER_COUNT}},
{RPN_C_, "TM_NGT_UVPV_PER_A2D", {.dbl = TM_NGT_UVPV_PER_A2D}},
{RPN_C_, "TM_PDTM_COUNT_AT_FS", {.dbl = TM_PDTM_COUNT_AT_FS}},
{RPN_C_, "TM_PDTM_GAIN_VALUES", {.dbl = TM_PDTM_GAIN_VALUES}},
{RPN_C_, "TM_PDTM_TC_PER_DEGC", {.dbl = TM_PDTM_TC_PER_DEGC}},
{RPN_C_, "TM_S700P_FILTER_MAX", {.dbl = TM_S700P_FILTER_MAX}},
{RPN_C_, "TM_S700_COUNT_AT_FS", {.dbl = TM_S700_COUNT_AT_FS}},
{RPN_D_, "cxLX_NGT_SHUNT_OHMS", {cxLX_NGT_SHUNT_OHMS}},
{RPN_D_, "cxTM_BLT_ACDC_RATIO", {cxTM_BLT_ACDC_RATIO}},
{RPN_D_, "cxTM_BLT_SHUNT_OHMS", {cxTM_BLT_SHUNT_OHMS}},
{RPN_D_, "cxTM_CDTM_FILTER_Hz", {cxTM_CDTM_FILTER_Hz}},
{RPN_D_, "cxTM_CDTM_NOISE_MAX", {cxTM_CDTM_NOISE_MAX}},
{RPN_D_, "cxTM_CDTM_NOISE_MIN", {cxTM_CDTM_NOISE_MIN}},
{RPN_D_, "cxTM_DAOV_DAC_IF_0V", {cxTM_DAOV_DAC_IF_0V}},
{RPN_D_, "cxTM_DAOV_DAC_PER_V", {cxTM_DAOV_DAC_PER_V}},
{RPN_D_, "cxTM_NGRTM_CLOCK_Hz", {cxTM_NGRTM_CLOCK_Hz}},
{RPN_D_, "cxTM_NGRTM_P0_AT_FS", {cxTM_NGRTM_P0_AT_FS}},
{RPN_D_, "cxTM_NGT_SHUNT_UVPV", {cxTM_NGT_SHUNT_UVPV}},
{RPN_D_, "cxTM_PDTM_FILTER_Hz", {cxTM_PDTM_FILTER_Hz}},
{RPN_D_, "cxTM_PDTM_NOISE_MAX", {cxTM_PDTM_NOISE_MAX}},
{RPN_D_, "cxTM_PDTM_NOISE_MIN", {cxTM_PDTM_NOISE_MIN}},
{RPN_D_, "cxTM_S700P_P0_AT_FS", {cxTM_S700P_P0_AT_FS}},
{RPN_D_, "cxTM_S700_FILTER_Hz", {cxTM_S700_FILTER_Hz}},
{RPN_C_, "LX_BLTAC_ROTOR_13R", {.dbl = LX_BLTAC_ROTOR_13R}},
{RPN_C_, "LX_BLTAC_ROTOR_14R", {.dbl = LX_BLTAC_ROTOR_14R}},
{RPN_C_, "LX_BLTDC_ROTOR_24R", {.dbl = LX_BLTDC_ROTOR_24R}},
{RPN_C_, "LX_BLTDC_ROTOR_25R", {.dbl = LX_BLTDC_ROTOR_25R}},
{RPN_C_, "LX_BLTDC_ROTOR_26R", {.dbl = LX_BLTDC_ROTOR_26R}},
{RPN_C_, "LX_BLTDC_ROTOR_27R", {.dbl = LX_BLTDC_ROTOR_27R}},
{RPN_C_, "TM_BLTAC_FILTER_Hz", {.dbl = TM_BLTAC_FILTER_Hz}},
{RPN_C_, "TM_BLTAC_NOISE_MAX", {.dbl = TM_BLTAC_NOISE_MAX}},
{RPN_C_, "TM_BLTAC_NOISE_MIN", {.dbl = TM_BLTAC_NOISE_MIN}},
{RPN_C_, "TM_BLTAC_SHUNT_A2D", {.dbl = TM_BLTAC_SHUNT_A2D}},
{RPN_C_, "TM_BLTDC_FILTER_Hz", {.dbl = TM_BLTDC_FILTER_Hz}},
{RPN_C_, "TM_BLTDC_NOISE_MAX", {.dbl = TM_BLTDC_NOISE_MAX}},
{RPN_C_, "TM_BLTDC_NOISE_MIN", {.dbl = TM_BLTDC_NOISE_MIN}},
{RPN_C_, "TM_BLTDC_SHUNT_A2D", {.dbl = TM_BLTDC_SHUNT_A2D}},
{RPN_C_, "TM_BLT_COUNT_AT_FS", {.dbl = TM_BLT_COUNT_AT_FS}},
{RPN_C_, "TM_DAOI_DAC_PER_mA", {.dbl = TM_DAOI_DAC_PER_mA}},
{RPN_C_, "TM_NGRTM_FILTER_Hz", {.dbl = TM_NGRTM_FILTER_Hz}},
{RPN_C_, "TM_NGRTM_NOISE_MAX", {.dbl = TM_NGRTM_NOISE_MAX}},
{RPN_C_, "TM_NGRTM_NOISE_MIN", {.dbl = TM_NGRTM_NOISE_MIN}},
{RPN_C_, "TM_NGT00_SHUNT_A2D", {.dbl = TM_NGT00_SHUNT_A2D}},
{RPN_C_, "TM_NGT_COUNT_AT_FS", {.dbl = TM_NGT_COUNT_AT_FS}},
{RPN_C_, "TM_PDTM_FILTER_MAX", {.dbl = TM_PDTM_FILTER_MAX}},
{RPN_C_, "TM_S700P_A2D_AT_FS", {.dbl = TM_S700P_A2D_AT_FS}},
{RPN_C_, "TM_S700P_FILTER_Hz", {.dbl = TM_S700P_FILTER_Hz}},
{RPN_C_, "TM_S700_FILTER_MAX", {.dbl = TM_S700_FILTER_MAX}},
{RPN_D_, "cxLX_CDTM_V_OFFSET", {cxLX_CDTM_V_OFFSET}},
{RPN_D_, "cxLX_PDTM_GAIN_HWA", {cxLX_PDTM_GAIN_HWA}},
{RPN_D_, "cxLX_PDTM_GAIN_HWB", {cxLX_PDTM_GAIN_HWB}},
{RPN_D_, "cxLX_PDTM_GAIN_HWC", {cxLX_PDTM_GAIN_HWC}},
{RPN_D_, "cxLX_PDTM_GAIN_HWD", {cxLX_PDTM_GAIN_HWD}},
{RPN_D_, "cxTM_CDTM_CLOCK_Hz", {cxTM_CDTM_CLOCK_Hz}},
{RPN_D_, "cxTM_CDTM_P0_AT_FS", {cxTM_CDTM_P0_AT_FS}},
{RPN_D_, "cxTM_DAOI_GZ_MAGIC", {cxTM_DAOI_GZ_MAGIC}},
{RPN_D_, "cxTM_DAOI_mA_AT_0V", {cxTM_DAOI_mA_AT_0V}},
{RPN_D_, "cxTM_DAOI_mA_IF_0V", {cxTM_DAOI_mA_IF_0V}},
{RPN_D_, "cxTM_DAOI_mA_PER_V", {cxTM_DAOI_mA_PER_V}},
{RPN_D_, "cxTM_NGRTM_A2D_CAP", {cxTM_NGRTM_A2D_CAP}},
{RPN_D_, "cxTM_NGT_FILTER_Hz", {cxTM_NGT_FILTER_Hz}},
{RPN_D_, "cxTM_NGT_NOISE_MAX", {cxTM_NGT_NOISE_MAX}},
{RPN_D_, "cxTM_NGT_NOISE_MIN", {cxTM_NGT_NOISE_MIN}},
{RPN_D_, "cxTM_NGT_SHUNT_A2D", {cxTM_NGT_SHUNT_A2D}},
{RPN_D_, "cxTM_PDTM_CLOCK_Hz", {cxTM_PDTM_CLOCK_Hz}},
{RPN_D_, "cxTM_PDTM_P0_AT_FS", {cxTM_PDTM_P0_AT_FS}},
{RPN_D_, "cxTM_S700P_A2D_CAP", {cxTM_S700P_A2D_CAP}},
{RPN_D_, "cxTM_S700_P0_AT_FS", {cxTM_S700_P0_AT_FS}},
{RPN_D_, "cxTM_TEST_TIME_SEC", {cxTM_TEST_TIME_SEC}},
{RPN_C_, "LX_NGT_SHUNT_OHMS", {.dbl = LX_NGT_SHUNT_OHMS}},
{RPN_C_, "TM_BLT_ACDC_RATIO", {.dbl = TM_BLT_ACDC_RATIO}},
{RPN_C_, "TM_BLT_SHUNT_OHMS", {.dbl = TM_BLT_SHUNT_OHMS}},
{RPN_C_, "TM_CDTM_FILTER_Hz", {.dbl = TM_CDTM_FILTER_Hz}},
{RPN_C_, "TM_CDTM_NOISE_MAX", {.dbl = TM_CDTM_NOISE_MAX}},
{RPN_C_, "TM_CDTM_NOISE_MIN", {.dbl = TM_CDTM_NOISE_MIN}},
{RPN_C_, "TM_DAOV_DAC_IF_0V", {.dbl = TM_DAOV_DAC_IF_0V}},
{RPN_C_, "TM_DAOV_DAC_PER_V", {.dbl = TM_DAOV_DAC_PER_V}},
{RPN_C_, "TM_NGRTM_CLOCK_Hz", {.dbl = TM_NGRTM_CLOCK_Hz}},
{RPN_C_, "TM_NGRTM_P0_AT_FS", {.dbl = TM_NGRTM_P0_AT_FS}},
{RPN_C_, "TM_NGT_SHUNT_UVPV", {.dbl = TM_NGT_SHUNT_UVPV}},
{RPN_C_, "TM_PDTM_FILTER_Hz", {.dbl = TM_PDTM_FILTER_Hz}},
{RPN_C_, "TM_PDTM_NOISE_MAX", {.dbl = TM_PDTM_NOISE_MAX}},
{RPN_C_, "TM_PDTM_NOISE_MIN", {.dbl = TM_PDTM_NOISE_MIN}},
{RPN_C_, "TM_S700P_P0_AT_FS", {.dbl = TM_S700P_P0_AT_FS}},
{RPN_C_, "TM_S700_FILTER_Hz", {.dbl = TM_S700_FILTER_Hz}},
{RPN_D_, "cxLX_NGT_URV_GAIN", {cxLX_NGT_URV_GAIN}},
{RPN_D_, "cxTM_AD22103_VREF", {cxTM_AD22103_VREF}},
{RPN_D_, "cxTM_BLT_CLOCK_Hz", {cxTM_BLT_CLOCK_Hz}},
{RPN_D_, "cxTM_BLT_P0_AT_FS", {cxTM_BLT_P0_AT_FS}},
{RPN_D_, "cxTM_CDTM_FS_UVPV", {cxTM_CDTM_FS_UVPV}},
{RPN_D_, "cxTM_DAOI_mA_GAIN", {cxTM_DAOI_mA_GAIN}},
{RPN_D_, "cxTM_DAOV_DAC_MAX", {cxTM_DAOV_DAC_MAX}},
{RPN_D_, "cxTM_DAOV_DAC_MIN", {cxTM_DAOV_DAC_MIN}},
{RPN_D_, "cxTM_NGRTM_CAMELA", {cxTM_NGRTM_CAMELA}},
{RPN_D_, "cxTM_NGRTM_CAMELD", {cxTM_NGRTM_CAMELD}},
{RPN_D_, "cxTM_NGT_CLOCK_Hz", {cxTM_NGT_CLOCK_Hz}},
{RPN_D_, "cxTM_NGT_P0_AT_FS", {cxTM_NGT_P0_AT_FS}},
{RPN_D_, "cxTM_PDTM_A2D_CAP", {cxTM_PDTM_A2D_CAP}},
{RPN_D_, "cxTM_PDTM_GAIN_HW", {cxTM_PDTM_GAIN_HW}},
{RPN_C_, "LX_CDTM_V_OFFSET", {.dbl = LX_CDTM_V_OFFSET}},
{RPN_C_, "LX_PDTM_GAIN_HWA", {.dbl = LX_PDTM_GAIN_HWA}},
{RPN_C_, "LX_PDTM_GAIN_HWB", {.dbl = LX_PDTM_GAIN_HWB}},
{RPN_C_, "LX_PDTM_GAIN_HWC", {.dbl = LX_PDTM_GAIN_HWC}},
{RPN_C_, "LX_PDTM_GAIN_HWD", {.dbl = LX_PDTM_GAIN_HWD}},
{RPN_C_, "TM_CDTM_CLOCK_Hz", {.dbl = TM_CDTM_CLOCK_Hz}},
{RPN_C_, "TM_CDTM_P0_AT_FS", {.dbl = TM_CDTM_P0_AT_FS}},
{RPN_C_, "TM_DAOI_GZ_MAGIC", {.dbl = TM_DAOI_GZ_MAGIC}},
{RPN_C_, "TM_DAOI_mA_AT_0V", {.dbl = TM_DAOI_mA_AT_0V}},
{RPN_C_, "TM_DAOI_mA_IF_0V", {.dbl = TM_DAOI_mA_IF_0V}},
{RPN_C_, "TM_DAOI_mA_PER_V", {.dbl = TM_DAOI_mA_PER_V}},
{RPN_C_, "TM_NGRTM_A2D_CAP", {.dbl = TM_NGRTM_A2D_CAP}},
{RPN_C_, "TM_NGT_FILTER_Hz", {.dbl = TM_NGT_FILTER_Hz}},
{RPN_C_, "TM_NGT_NOISE_MAX", {.dbl = TM_NGT_NOISE_MAX}},
{RPN_C_, "TM_NGT_NOISE_MIN", {.dbl = TM_NGT_NOISE_MIN}},
{RPN_C_, "TM_NGT_SHUNT_A2D", {.dbl = TM_NGT_SHUNT_A2D}},
{RPN_C_, "TM_PDTM_CLOCK_Hz", {.dbl = TM_PDTM_CLOCK_Hz}},
{RPN_C_, "TM_PDTM_P0_AT_FS", {.dbl = TM_PDTM_P0_AT_FS}},
{RPN_C_, "TM_S700P_A2D_CAP", {.dbl = TM_S700P_A2D_CAP}},
{RPN_C_, "TM_S700_P0_AT_FS", {.dbl = TM_S700_P0_AT_FS}},
{RPN_C_, "TM_TEST_TIME_SEC", {.dbl = TM_TEST_TIME_SEC}},
{RPN_D_, "cxTM_BLT_A2D_CAP", {cxTM_BLT_A2D_CAP}},
{RPN_D_, "cxTM_CDTM_MIN_Hz", {cxTM_CDTM_MIN_Hz}},
{RPN_D_, "cxTM_NGRTM_SCALE", {cxTM_NGRTM_SCALE}},
{RPN_D_, "cxTM_NGT_A2D_CAP", {cxTM_NGT_A2D_CAP}},
{RPN_D_, "cxTM_NGT_AO_MULT", {cxTM_NGT_AO_MULT}},
{RPN_D_, "cxTM_NGT_AO_SHFT", {cxTM_NGT_AO_SHFT}},
{RPN_D_, "cxTM_PDTM_A2D_FS", {cxTM_PDTM_A2D_FS}},
{RPN_D_D, "tmc_dao_DAC_to_V", {tmc_dao_DAC_to_V}},
{RPN_D_D, "tmc_dao_V_to_DAC", {tmc_dao_V_to_DAC}},
{RPN_C_, "LX_NGT_URV_GAIN", {.dbl = LX_NGT_URV_GAIN}},
{RPN_C_, "TM_AD22103_VREF", {.dbl = TM_AD22103_VREF}},
{RPN_C_, "TM_BLT_CLOCK_Hz", {.dbl = TM_BLT_CLOCK_Hz}},
{RPN_C_, "TM_BLT_P0_AT_FS", {.dbl = TM_BLT_P0_AT_FS}},
{RPN_C_, "TM_CDTM_FS_UVPV", {.dbl = TM_CDTM_FS_UVPV}},
{RPN_C_, "TM_DAOI_mA_GAIN", {.dbl = TM_DAOI_mA_GAIN}},
{RPN_C_, "TM_DAOV_DAC_MAX", {.dbl = TM_DAOV_DAC_MAX}},
{RPN_C_, "TM_DAOV_DAC_MIN", {.dbl = TM_DAOV_DAC_MIN}},
{RPN_C_, "TM_NGRTM_CAMELA", {.dbl = TM_NGRTM_CAMELA}},
{RPN_C_, "TM_NGRTM_CAMELD", {.dbl = TM_NGRTM_CAMELD}},
{RPN_C_, "TM_NGT_CLOCK_Hz", {.dbl = TM_NGT_CLOCK_Hz}},
{RPN_C_, "TM_NGT_P0_AT_FS", {.dbl = TM_NGT_P0_AT_FS}},
{RPN_C_, "TM_PDTM_A2D_CAP", {.dbl = TM_PDTM_A2D_CAP}},
{RPN_C_, "TM_PDTM_GAIN_HW", {.dbl = TM_PDTM_GAIN_HW}},
{RPN_D_, "cxLX_CDTM_GAINA", {cxLX_CDTM_GAINA}},
{RPN_D_, "cxLX_CDTM_GAINB", {cxLX_CDTM_GAINB}},
{RPN_D_, "cxTM_BLTAC_GAIN", {cxTM_BLTAC_GAIN}},
{RPN_D_, "cxTM_BLTDC_GAIN", {cxTM_BLTDC_GAIN}},
{RPN_D_, "cxTM_NGRTM_GAIN", {cxTM_NGRTM_GAIN}},
{RPN_D_, "cxTM_NGT_P0_MAX", {cxTM_NGT_P0_MAX}},
{RPN_D_DD, "tmc_shunt_value", {tmc_shunt_value}},
{RPN_C_, "TM_BLT_A2D_CAP", {.dbl = TM_BLT_A2D_CAP}},
{RPN_C_, "TM_CDTM_MIN_Hz", {.dbl = TM_CDTM_MIN_Hz}},
{RPN_C_, "TM_NGRTM_SCALE", {.dbl = TM_NGRTM_SCALE}},
{RPN_C_, "TM_NGT_A2D_CAP", {.dbl = TM_NGT_A2D_CAP}},
{RPN_C_, "TM_NGT_AO_MULT", {.dbl = TM_NGT_AO_MULT}},
{RPN_C_, "TM_NGT_AO_SHFT", {.dbl = TM_NGT_AO_SHFT}},
{RPN_C_, "TM_PDTM_A2D_FS", {.dbl = TM_PDTM_A2D_FS}},
{RPN_D_, "cxLX_DAOV_RGND", {cxLX_DAOV_RGND}},
{RPN_D_, "cxLX_DAOV_RPRE", {cxLX_DAOV_RPRE}},
{RPN_D_, "cxLX_NGRTM_28R", {cxLX_NGRTM_28R}},
{RPN_D_, "cxLX_NGRTM_30R", {cxLX_NGRTM_30R}},
{RPN_D_, "cxTM_CDTM_GAIN", {cxTM_CDTM_GAIN}},
{RPN_D_, "cxTM_DAOV_GAIN", {cxTM_DAOV_GAIN}},
{RPN_D_, "cxTM_DAOV_VREF", {cxTM_DAOV_VREF}},
{RPN_D_, "cxTM_PDTM_MULT", {cxTM_PDTM_MULT}},
{RPN_C_, "LX_CDTM_GAINA", {.dbl = LX_CDTM_GAINA}},
{RPN_C_, "LX_CDTM_GAINB", {.dbl = LX_CDTM_GAINB}},
{RPN_C_, "TM_BLTAC_GAIN", {.dbl = TM_BLTAC_GAIN}},
{RPN_C_, "TM_BLTDC_GAIN", {.dbl = TM_BLTDC_GAIN}},
{RPN_C_, "TM_NGRTM_GAIN", {.dbl = TM_NGRTM_GAIN}},
{RPN_C_, "TM_NGT_P0_MAX", {.dbl = TM_NGT_P0_MAX}},
{RPN_D_, "cxLX_PDTM_10R", {cxLX_PDTM_10R}},
{RPN_D_, "cxLX_PDTM_11R", {cxLX_PDTM_11R}},
{RPN_D_, "cxLX_PDTM_18R", {cxLX_PDTM_18R}},
{RPN_D_, "cxLX_PDTM_19R", {cxLX_PDTM_19R}},
{RPN_D_, "cxLX_PDTM_22R", {cxLX_PDTM_22R}},
{RPN_D_, "cxLX_PDTM_23R", {cxLX_PDTM_23R}},
{RPN_D_, "cxTM_DAOV_CAP", {cxTM_DAOV_CAP}},
{RPN_D_, "cxTM_NGT_GAIN", {cxTM_NGT_GAIN}},
{RPN_C_, "LX_DAOV_RGND", {.dbl = LX_DAOV_RGND}},
{RPN_C_, "LX_DAOV_RPRE", {.dbl = LX_DAOV_RPRE}},
{RPN_C_, "LX_NGRTM_28R", {.dbl = LX_NGRTM_28R}},
{RPN_C_, "LX_NGRTM_30R", {.dbl = LX_NGRTM_30R}},
{RPN_C_, "TM_CDTM_GAIN", {.dbl = TM_CDTM_GAIN}},
{RPN_C_, "TM_DAOV_GAIN", {.dbl = TM_DAOV_GAIN}},
{RPN_C_, "TM_DAOV_VREF", {.dbl = TM_DAOV_VREF}},
{RPN_C_, "TM_PDTM_MULT", {.dbl = TM_PDTM_MULT}},
{RPN_D_, "cxLX_CDTM_2R", {cxLX_CDTM_2R}},
{RPN_D_, "cxLX_CDTM_2V", {cxLX_CDTM_2V}},
{RPN_D_, "cxLX_CDTM_5R", {cxLX_CDTM_5R}},
{RPN_D_, "cxLX_CDTM_7C", {cxLX_CDTM_7C}},
{RPN_D_, "cxLX_CDTM_7R", {cxLX_CDTM_7R}},
{RPN_D_, "cxLX_CDTM_8C", {cxLX_CDTM_8C}},
{RPN_D_, "cxLX_CDTM_8R", {cxLX_CDTM_8R}},
{RPN_D_, "cxLX_CDTM_CT", {cxLX_CDTM_CT}},
{RPN_D_, "cxLX_CDTM_RZ", {cxLX_CDTM_RZ}},
{RPN_D_, "cxLX_DAOI_1R", {cxLX_DAOI_1R}},
{RPN_D_, "cxLX_DAOI_2R", {cxLX_DAOI_2R}},
{RPN_D_, "cxLX_DAOI_3R", {cxLX_DAOI_3R}},
{RPN_D_, "cxLX_DAOI_4R", {cxLX_DAOI_4R}},
{RPN_D_, "cxLX_DAOV_2R", {cxLX_DAOV_2R}},
{RPN_C_, "LX_PDTM_10R", {.dbl = LX_PDTM_10R}},
{RPN_C_, "LX_PDTM_11R", {.dbl = LX_PDTM_11R}},
{RPN_C_, "LX_PDTM_18R", {.dbl = LX_PDTM_18R}},
{RPN_C_, "LX_PDTM_19R", {.dbl = LX_PDTM_19R}},
{RPN_C_, "LX_PDTM_22R", {.dbl = LX_PDTM_22R}},
{RPN_C_, "LX_PDTM_23R", {.dbl = LX_PDTM_23R}},
{RPN_C_, "TM_DAOV_CAP", {.dbl = TM_DAOV_CAP}},
{RPN_C_, "TM_NGT_GAIN", {.dbl = TM_NGT_GAIN}},
{RPN_D_, "cxLX_NGT_3R", {cxLX_NGT_3R}},
{RPN_D_, "cxLX_NGT_7R", {cxLX_NGT_7R}},
{RPN_D_, "cxTM_CDTM_X", {cxTM_CDTM_X}},
{RPN_C_, "LX_CDTM_2R", {.dbl = LX_CDTM_2R}},
{RPN_C_, "LX_CDTM_2V", {.dbl = LX_CDTM_2V}},
{RPN_C_, "LX_CDTM_5R", {.dbl = LX_CDTM_5R}},
{RPN_C_, "LX_CDTM_7C", {.dbl = LX_CDTM_7C}},
{RPN_C_, "LX_CDTM_7R", {.dbl = LX_CDTM_7R}},
{RPN_C_, "LX_CDTM_8C", {.dbl = LX_CDTM_8C}},
{RPN_C_, "LX_CDTM_8R", {.dbl = LX_CDTM_8R}},
{RPN_C_, "LX_CDTM_CT", {.dbl = LX_CDTM_CT}},
{RPN_C_, "LX_CDTM_RZ", {.dbl = LX_CDTM_RZ}},
{RPN_C_, "LX_DAOI_1R", {.dbl = LX_DAOI_1R}},
{RPN_C_, "LX_DAOI_2R", {.dbl = LX_DAOI_2R}},
{RPN_C_, "LX_DAOI_3R", {.dbl = LX_DAOI_3R}},
{RPN_C_, "LX_DAOI_4R", {.dbl = LX_DAOI_4R}},
{RPN_C_, "LX_DAOV_2R", {.dbl = LX_DAOV_2R}},
{RPN_C_, "LX_NGT_3R", {.dbl = LX_NGT_3R}},
{RPN_C_, "LX_NGT_7R", {.dbl = LX_NGT_7R}},
{RPN_C_, "TM_CDTM_X", {.dbl = TM_CDTM_X}},
{RPN_D_, "cxA2DCNT", {cxA2DCNT}},
{RPN_D_, "cxDACCNT", {cxDACCNT}},
{RPN_D_, "cxENGCNT", {cxENGCNT}},
{RPN_D_, "cxP0CNT", {cxP0CNT}},
{RPN_C_, "A2DCNT", {.dbl = A2DCNT}},
{RPN_C_, "DACCNT", {.dbl = DACCNT}},
{RPN_C_, "ENGCNT", {.dbl = ENGCNT}},
{RPN_C_, "P0CNT", {.dbl = P0CNT}},
#endif // #ifndef INCLUDED_Tm_Const_rpn
